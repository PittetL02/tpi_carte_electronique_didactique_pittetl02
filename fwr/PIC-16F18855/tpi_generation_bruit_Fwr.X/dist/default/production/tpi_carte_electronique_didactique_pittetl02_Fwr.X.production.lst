

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 30 08:24:29 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F15214
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 11/01/2024 GMT
    15                           ; 
    16                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F15214 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     0012                     	;# 
    62     0018                     	;# 
    63     009A                     	;# 
    64     009B                     	;# 
    65     009B                     	;# 
    66     009C                     	;# 
    67     009D                     	;# 
    68     009E                     	;# 
    69     009F                     	;# 
    70     0119                     	;# 
    71     011A                     	;# 
    72     011B                     	;# 
    73     011B                     	;# 
    74     011C                     	;# 
    75     011D                     	;# 
    76     011E                     	;# 
    77     011F                     	;# 
    78     018C                     	;# 
    79     018D                     	;# 
    80     018E                     	;# 
    81     018F                     	;# 
    82     0190                     	;# 
    83     0191                     	;# 
    84     0192                     	;# 
    85     020C                     	;# 
    86     020C                     	;# 
    87     020D                     	;# 
    88     020E                     	;# 
    89     020E                     	;# 
    90     020F                     	;# 
    91     020F                     	;# 
    92     0210                     	;# 
    93     0210                     	;# 
    94     0211                     	;# 
    95     0211                     	;# 
    96     0211                     	;# 
    97     028C                     	;# 
    98     028C                     	;# 
    99     028D                     	;# 
   100     028D                     	;# 
   101     028E                     	;# 
   102     028F                     	;# 
   103     0290                     	;# 
   104     0291                     	;# 
   105     030C                     	;# 
   106     030C                     	;# 
   107     030D                     	;# 
   108     030E                     	;# 
   109     030F                     	;# 
   110     0310                     	;# 
   111     0310                     	;# 
   112     0311                     	;# 
   113     0312                     	;# 
   114     0313                     	;# 
   115     0314                     	;# 
   116     0314                     	;# 
   117     0315                     	;# 
   118     0316                     	;# 
   119     0318                     	;# 
   120     0318                     	;# 
   121     0319                     	;# 
   122     031A                     	;# 
   123     059C                     	;# 
   124     059C                     	;# 
   125     059D                     	;# 
   126     059D                     	;# 
   127     059E                     	;# 
   128     059F                     	;# 
   129     070C                     	;# 
   130     070D                     	;# 
   131     070E                     	;# 
   132     0716                     	;# 
   133     0717                     	;# 
   134     0718                     	;# 
   135     080C                     	;# 
   136     0811                     	;# 
   137     0813                     	;# 
   138     0814                     	;# 
   139     081A                     	;# 
   140     081A                     	;# 
   141     081B                     	;# 
   142     081C                     	;# 
   143     081C                     	;# 
   144     081D                     	;# 
   145     081E                     	;# 
   146     081F                     	;# 
   147     088E                     	;# 
   148     0890                     	;# 
   149     0891                     	;# 
   150     0892                     	;# 
   151     0893                     	;# 
   152     090C                     	;# 
   153     1E8F                     	;# 
   154     1E90                     	;# 
   155     1E91                     	;# 
   156     1E92                     	;# 
   157     1E93                     	;# 
   158     1E9C                     	;# 
   159     1EA1                     	;# 
   160     1EA2                     	;# 
   161     1EC3                     	;# 
   162     1EC5                     	;# 
   163     1EC6                     	;# 
   164     1EC7                     	;# 
   165     1ECB                     	;# 
   166     1ECB                     	;# 
   167     1ECB                     	;# 
   168     1ECC                     	;# 
   169     1ECC                     	;# 
   170     1ECC                     	;# 
   171     1F10                     	;# 
   172     1F11                     	;# 
   173     1F12                     	;# 
   174     1F14                     	;# 
   175     1F15                     	;# 
   176     1F38                     	;# 
   177     1F39                     	;# 
   178     1F3A                     	;# 
   179     1F3B                     	;# 
   180     1F3C                     	;# 
   181     1F3D                     	;# 
   182     1F3E                     	;# 
   183     1F3F                     	;# 
   184     1FE4                     	;# 
   185     1FE5                     	;# 
   186     1FE6                     	;# 
   187     1FE7                     	;# 
   188     1FE8                     	;# 
   189     1FE8                     	;# 
   190     1FE9                     	;# 
   191     1FEA                     	;# 
   192     1FEB                     	;# 
   193     1FED                     	;# 
   194     1FEE                     	;# 
   195     1FEF                     	;# 
   196                           
   197                           	psect	idataCOMMON
   198     07B4                     __pidataCOMMON:
   199                           
   200                           ;initializer for _lfsr
   201     07B4  34A5               	retlw	165
   202     0012                     _TRISA	set	18
   203     0018                     _LATA	set	24
   204     0018                     _LATAbits	set	24
   205     088E                     _OSCCON	set	2190
   206     1F38                     _ANSELA	set	7992
   207                           
   208                           	psect	cinit
   209     07F9                     start_initialization:	
   210                           ; #config settings
   211                           
   212     07F9                     __initialization:
   213                           
   214                           ; Initialize objects allocated to COMMON
   215     07F9  3187  27B4  3187   	fcall	__pidataCOMMON	;fetch initializer
   216     07FC  00F7               	movwf	__pdataCOMMON& (0+127)
   217     07FD                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FD                     __end_of__initialization:
   221     07FD  0140               	movlb	0
   222     07FE  3187  2FBE         	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	dataCOMMON
   225     0077                     __pdataCOMMON:
   226     0077                     _lfsr:
   227     0077                     	ds	1
   228                           
   229                           	psect	cstackCOMMON
   230     0070                     __pcstackCOMMON:
   231     0070                     ?_InitPic:
   232     0070                     ??_InitPic:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_lfsr_next:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ??_lfsr_next:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246     0070                     	ds	4
   247     0074                     lfsr_next@bit:
   248                           
   249                           ; 1 bytes @ 0x4
   250     0074                     	ds	1
   251     0075                     ??_main:
   252                           
   253                           ; 1 bytes @ 0x5
   254     0075                     	ds	1
   255     0076                     main@out:
   256                           
   257                           ; 1 bytes @ 0x6
   258     0076                     	ds	1
   259                           
   260                           	psect	maintext
   261     07BE                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 59 in file "main.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  out             1    6[COMMON] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2, status,0, pclath, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : B3F/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   281 ;;      Params:         0       0       0       0       0       0       0       0
   282 ;;      Locals:         1       0       0       0       0       0       0       0
   283 ;;      Temps:          1       0       0       0       0       0       0       0
   284 ;;      Totals:         2       0       0       0       0       0       0       0
   285 ;;Total ram usage:        2 bytes
   286 ;; Hardware stack levels required when called: 1
   287 ;; This function calls:
   288 ;;		_InitPic
   289 ;;		_lfsr_next
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295     07BE                     _main:	
   296                           ;psect for function _main
   297                           
   298     07BE                     l572:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   301                           
   302                           
   303                           ;main.c: 61:     InitPic();
   304     07BE  3187  27B5  3187   	fcall	_InitPic
   305     07C1                     l23:	
   306                           ;main.c: 63:     while (1)
   307                           
   308                           
   309                           ;main.c: 64:     {;main.c: 65:         uint8_t out = lfsr_next();
   310     07C1  3187  27D5  3187   	fcall	_lfsr_next
   311     07C4  00F6               	movwf	main@out
   312     07C5                     l574:
   313                           
   314                           ;main.c: 66:         LATAbits.LATA5 = out;
   315     07C5  0C76               	rrf	main@out,w
   316     07C6  0140               	movlb	0	; select bank0
   317     07C7  1C03               	skipc
   318     07C8  1298               	bcf	24,5	;volatile
   319     07C9  1803               	skipnc
   320     07CA  1698               	bsf	24,5	;volatile
   321     07CB                     l576:
   322                           
   323                           ;main.c: 67:         _delay((unsigned long)((10)*(4000000/4000.0)));
   324     07CB  300D               	movlw	13
   325     07CC  00F5               	movwf	??_main
   326     07CD  30FC               	movlw	252
   327     07CE                     u57:
   328     07CE  0B89               	decfsz	9,f
   329     07CF  2FCE               	goto	u57
   330     07D0  0BF5               	decfsz	??_main,f
   331     07D1  2FCE               	goto	u57
   332     07D2  2FC1               	goto	l23
   333     07D3  3180  2802         	ljmp	start
   334     07D5                     __end_of_main:
   335                           
   336                           	psect	text1
   337     07D5                     __ptext1:	
   338 ;; *************** function _lfsr_next *****************
   339 ;; Defined at:
   340 ;;		line 80 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  bit             1    4[COMMON] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      unsigned char 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   354 ;;      Params:         0       0       0       0       0       0       0       0
   355 ;;      Locals:         1       0       0       0       0       0       0       0
   356 ;;      Temps:          4       0       0       0       0       0       0       0
   357 ;;      Totals:         5       0       0       0       0       0       0       0
   358 ;;Total ram usage:        5 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367     07D5                     _lfsr_next:	
   368                           ;psect for function _lfsr_next
   369                           
   370     07D5                     l566:	
   371                           ;incstack = 0
   372                           ; Regs used in _lfsr_next: [wreg+status,2+status,0]
   373                           
   374                           
   375                           ;main.c: 82:     uint8_t bit = (((lfsr >> 7) ^ (lfsr >> 5)) ^ (lfsr >> 4) ^ (lfsr >> 3))
      +                           & 1;
   376     07D5  0877               	movf	_lfsr,w
   377     07D6  00F0               	movwf	??_lfsr_next
   378     07D7  3003               	movlw	3
   379     07D8                     u15:
   380     07D8  36F0               	lsrf	??_lfsr_next,f
   381     07D9  0B89               	decfsz	9,f
   382     07DA  2FD8               	goto	u15
   383     07DB  0877               	movf	_lfsr,w
   384     07DC  00F1               	movwf	??_lfsr_next+1
   385     07DD  3004               	movlw	4
   386     07DE                     u25:
   387     07DE  36F1               	lsrf	??_lfsr_next+1,f
   388     07DF  0B89               	decfsz	9,f
   389     07E0  2FDE               	goto	u25
   390     07E1  0877               	movf	_lfsr,w
   391     07E2  00F2               	movwf	??_lfsr_next+2
   392     07E3  3005               	movlw	5
   393     07E4                     u35:
   394     07E4  36F2               	lsrf	??_lfsr_next+2,f
   395     07E5  0B89               	decfsz	9,f
   396     07E6  2FE4               	goto	u35
   397     07E7  0877               	movf	_lfsr,w
   398     07E8  00F3               	movwf	??_lfsr_next+3
   399     07E9  3007               	movlw	7
   400     07EA                     u45:
   401     07EA  36F3               	lsrf	??_lfsr_next+3,f
   402     07EB  0B89               	decfsz	9,f
   403     07EC  2FEA               	goto	u45
   404     07ED  0873               	movf	??_lfsr_next+3,w
   405     07EE  0672               	xorwf	??_lfsr_next+2,w
   406     07EF  0671               	xorwf	??_lfsr_next+1,w
   407     07F0  0670               	xorwf	??_lfsr_next,w
   408     07F1  3901               	andlw	1
   409     07F2  00F4               	movwf	lfsr_next@bit
   410                           
   411                           ;main.c: 83:     lfsr = (lfsr << 1) | bit;
   412     07F3  3577               	lslf	_lfsr,w
   413     07F4  0474               	iorwf	lfsr_next@bit,w
   414     07F5  00F7               	movwf	_lfsr
   415     07F6                     l568:
   416                           
   417                           ;main.c: 84:     return lfsr & 1;
   418     07F6  0877               	movf	_lfsr,w
   419     07F7  3901               	andlw	1
   420     07F8                     l29:
   421     07F8  0008               	return
   422     07F9                     __end_of_lfsr_next:
   423                           
   424                           	psect	text2
   425     07B5                     __ptext2:	
   426 ;; *************** function _InitPic *****************
   427 ;; Defined at:
   428 ;;		line 95 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   442 ;;      Params:         0       0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455     07B5                     _InitPic:	
   456                           ;psect for function _InitPic
   457                           
   458     07B5                     l558:	
   459                           ;incstack = 0
   460                           ; Regs used in _InitPic: [wreg+status,2]
   461                           
   462                           
   463                           ;main.c: 102:     OSCCON = 0b01101010;
   464     07B5  306A               	movlw	106
   465     07B6  0151               	movlb	17	; select bank17
   466     07B7  008E               	movwf	14	;volatile
   467     07B8                     l560:
   468                           
   469                           ;main.c: 107:     ANSELA = 0;
   470     07B8  017E               	movlb	62	; select bank62
   471     07B9  01B8               	clrf	56	;volatile
   472     07BA                     l562:
   473                           
   474                           ;main.c: 112:     LATA = 0b00000000;
   475     07BA  0140               	movlb	0	; select bank0
   476     07BB  0198               	clrf	24	;volatile
   477     07BC                     l564:
   478                           
   479                           ;main.c: 117:     TRISA = 0b00000000;
   480     07BC  0192               	clrf	18	;volatile
   481     07BD                     l32:
   482     07BD  0008               	return
   483     07BE                     __end_of_InitPic:
   484     007E                     btemp	set	126	;btemp
   485     007E                     wtemp0	set	126
   486                           
   487                           	psect	config
   488                           
   489                           ;Config register CONFIG1 @ 0x8007
   490                           ;	External Oscillator Mode Selection bits
   491                           ;	FEXTOSC = OFF, Oscillator not enabled
   492                           ;	Power-up Default Value for COSC bits
   493                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
   494                           ;	Clock Out Enable bit
   495                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
   496                           ;	VDD Range Analog Calibration Selection bit
   497                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
   498     8007                     	org	32775
   499     8007  3FED               	dw	16365
   500                           
   501                           ;Config register CONFIG2 @ 0x8008
   502                           ;	Master Clear Enable bit
   503                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
   504                           ;	Power-up Timer Selection bits
   505                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   506                           ;	WDT Operating Mode bits
   507                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
   508                           ;	Brown-out Reset Enable bits
   509                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
   510                           ;	Brown-out Reset Voltage Selection bit
   511                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
   512                           ;	PPSLOCKED One-Way Set Enable bit
   513                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
   514                           ;	Stack Overflow/Underflow Reset Enable bit
   515                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
   516     8008                     	org	32776
   517     8008  3FFF               	dw	16383
   518                           
   519                           ;Config register CONFIG4 @ 0x800A
   520                           ;	Boot Block Size Selection bits
   521                           ;	BBSIZE = BB512, 512 words boot block size
   522                           ;	Boot Block Enable bit
   523                           ;	BBEN = OFF, Boot Block is disabled
   524                           ;	SAF Enable bit
   525                           ;	SAFEN = OFF, SAF is disabled
   526                           ;	Application Block Write Protection bit
   527                           ;	WRTAPP = OFF, Application Block is not write-protected
   528                           ;	Boot Block Write Protection bit
   529                           ;	WRTB = OFF, Boot Block is not write-protected
   530                           ;	Configuration Registers Write Protection bit
   531                           ;	WRTC = OFF, Configuration Registers are not write-protected
   532                           ;	Storage Area Flash (SAF) Write Protection bit
   533                           ;	WRTSAF = OFF, SAF is not write-protected
   534                           ;	Low Voltage Programming Enable bit
   535                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
   536     800A                     	org	32778
   537     800A  3FFF               	dw	16383
   538                           
   539                           ;Config register CONFIG5 @ 0x800B
   540                           ;	User Program Flash Memory Code Protection bit
   541                           ;	CP = OFF, User Program Flash Memory code protection is disabled
   542     800B                     	org	32779
   543     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lfsr_next

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              5 COMMON     2     2      0
                            _InitPic
                          _lfsr_next
 ---------------------------------------------------------------------------------
 (1) _lfsr_next                                            5     5      0      15
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _InitPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPic
   _lfsr_next

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       8      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 30 08:24:29 2025

                     l23 07C1                       l32 07BD                       l29 07F8  
                     u15 07D8                       u25 07DE                       u35 07E4  
                     u45 07EA                       u57 07CE                      l560 07B8  
                    l562 07BA                      l564 07BC                      l572 07BE  
                    l558 07B5                      l566 07D5                      l574 07C5  
                    l568 07F6                      l576 07CB                      wreg 0009  
                   _LATA 0018                     _main 07BE                     _lfsr 0077  
                   btemp 007E                     start 0002          __end_of_InitPic 07BE  
                  ?_main 0070                    _TRISA 0012                    wtemp0 007E  
        __initialization 07F9             __end_of_main 07D5                   ??_main 0075  
                 _ANSELA 1F38                   _OSCCON 088E                ??_InitPic 0070  
           __pdataCOMMON 0077  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 07BE                  _InitPic 07B5                  __ptext1 07D5  
                __ptext2 07B5        __end_of_lfsr_next 07F9                  main@out 0076  
   end_of_initialization 07FD             lfsr_next@bit 0074            __pidataCOMMON 07B4  
    start_initialization 07F9                ___latbits 0001                 ?_InitPic 0070  
              _lfsr_next 07D5                 _LATAbits 0018               ?_lfsr_next 0070  
            ??_lfsr_next 0070  
